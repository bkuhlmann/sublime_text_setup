<snippet>
  <content>
<![CDATA[
module ${1:Main} exposing (${2:..})

import Browser
import Browser.Navigation as Navigation
import Url

-- TYPES

type Message
  = LinkClicked Browser.UrlRequest
  | UrlChanged Url.Url

-- MODELS

type alias ${3:Flags} =
  {
  }

type alias ${4:Model} =
  {
    key: Navigation.Key
  }

-- MAIN

main : Program ${3:Flags} ${4:Model} Message
main =
  Browser.application
    {
      init = init,
      view = view,
      update = update,
      subscriptions = subscriptions,
      onUrlRequest = LinkClicked,
      onUrlChange = UrlChanged
    }

-- INIT

init : ${3:Flags} -> Url.Url -> Navigation.Key -> (${4:Model}, Cmd Message)
init flags url key =
  ({key = key}, Cmd.none)

-- VIEW

view : ${4:Model} -> Browser.Document Message
view ${4/(.*)/\L\1\E/i} =
  {
    title = "$5",
    body = [$6
    ]
  }

-- UPDATE

update : Message -> ${4:Model} -> (${4:Model}, Cmd Message)
update message ${4/(.*)/\L\1\E/i} =
  case message of
    LinkClicked request ->
      case request of
        Browser.Internal url ->
          (${4/(.*)/\L\1\E/i}, Navigation.pushUrl ${4/(.*)/\L\1\E/i}.key (Url.toString url))

        Browser.External href ->
          (${4/(.*)/\L\1\E/i}, Navigation.load href)

    UrlChanged url ->
      (${4/(.*)/\L\1\E/i}, Cmd.none)

-- SUBSCRIPTIONS

subscriptions : ${4:Model} -> Sub Message
subscriptions ${4/(.*)/\L\1\E/i} =
  Sub.none
]]>
  </content>
  <tabTrigger>ttha</tabTrigger>
  <description>Elm Template (HTML Application)</description>
  <scope>source.elm</scope>
</snippet>
