<snippet>
  <content>
<![CDATA[
module ${1:Application} exposing (${2:..})

import Navigation exposing (Location)
import Html exposing (Html, text)

-- MODELS

type alias Flags =
  {
  }

type alias ${3:Model} =
  {
    location: Location
  }

-- INIT

init : Flags -> Location -> (Model, Cmd Message)
init flags location =
  ({location = location}, Cmd.none)

-- VIEW

view : ${3:Model} -> Html Message
view ${3/(.*)/\L\1\E/i} =
  text ""

-- MESSAGE

type Message
  = ChangeLocation Location

-- UPDATE

update : Message -> ${3:Model} -> (${3:Model}, Cmd Message)
update message ${3/(.*)/\L\1\E/i} =
  case message of
    ChangeLocation location ->
      ({${3/(.*)/\L\1\E/i} | location = location}, Cmd.none)

-- SUBSCRIPTIONS

subscriptions : ${3:Model} -> Sub Message
subscriptions ${3/(.*)/\L\1\E/i} =
  Sub.none

-- MAIN

main : Program Flags ${3:Model} Message
main =
  Navigation.programWithFlags ChangeLocation
    {
      init = init,
      view = view,
      update = update,
      subscriptions = subscriptions
    }
]]>
  </content>
  <tabTrigger>ttnp</tabTrigger>
  <description>Elm Template (Navigation Program)</description>
  <scope>source.elm</scope>
</snippet>
